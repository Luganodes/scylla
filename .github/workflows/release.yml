name: Release

on:
  push:
    tags:
      - 'v*' 

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x' 

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build
        env:
          BINARY_NAME: ${{ github.event.repository.name }} 
          CONFIG_PACKAGE: github.com/luganodes/slashing-observer/config
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          BUILD_FLAGS: -ldflags "-X ${{ env.CONFIG_PACKAGE }}.EXTERNAL_VERSION=${{ env.VERSION }} -X ${{ env.CONFIG_PACKAGE }}.EXTERNAL_APP_NAME=${{ env.BINARY_NAME }}"
        run: |
          echo "Building ${{ env.BINARY_NAME }} with version ${{ env.VERSION }}..."
          go build ${{ env.BUILD_FLAGS }} -o ${{ env.BINARY_NAME }} cmd/app/main.go

      - name: Package release assets
        run: |
          mkdir release
          cp ${{ env.BINARY_NAME }} release/${{ env.BINARY_NAME }}-${{ steps.get_version.outputs.VERSION }}-linux-amd64
          # Add other platform builds here if needed (e.g., macOS, Windows)
          # Example for macOS:
          # GOOS=darwin GOARCH=amd64 go build ${{ env.BUILD_FLAGS }} -o release/${{ env.BINARY_NAME }}-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
          tar czvf release.tar.gz -C release ${{ env.BINARY_NAME }}-${{ steps.get_version.outputs.VERSION }}-linux-amd64
          # If you build for multiple platforms, you might want to include them in the tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## What's New in this Release?
            *(Add release notes here)*
          files: |
            release.tar.gz
            release/${{ env.BINARY_NAME }}-${{ steps.get_version.outputs.VERSION }}-linux-amd64